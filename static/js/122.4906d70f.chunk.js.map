{"version":3,"file":"static/js/122.4906d70f.chunk.js","mappings":"+QAsDA,EAhDgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAwBR,OAtBAE,EAAAA,EAAAA,YAAU,WACRH,GAAS,GAET,IAAMI,EAAW,mCAAG,8GAGOC,EAAAA,EAAAA,IAAkBJ,GAHzB,OAGVK,EAHU,OAMhBR,EAAWQ,GANK,gDAQhBN,GAAS,GACTO,QAAQR,MAAM,KAAMS,SACpBC,EAAAA,GAAAA,MACE,sEAXc,yDAAH,qDAgBjBL,GACD,GAAE,CAACH,KAGF,2BACGF,IAAS,wBAAI,YACbF,EAAQa,OAAS,GAChB,wBACGb,EAAQc,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,0CAAgBD,MAChB,uBAAIC,MAFGF,EAKZ,OAGH,uBAAG,+CAIV,C,kMClDDG,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACVH,EAAAA,EAAAA,IAAA,sCACUC,EADV,iBAC0BE,IAFhB,uBACzBC,EADyB,EACzBA,KADyB,kBAK1BA,EAAKC,SALqB,2CAAH,qDAQnBC,EAAiB,mCAAG,WAAOC,GAAP,gGAAcJ,EAAd,+BAAqB,EAC9CK,EAAe,IAAIC,gBAAgB,CACvCC,QAAST,EACTU,SAAU,QACVR,KAAMA,EACNS,eAAe,EACfC,MAAON,IANsB,SAQRP,EAAAA,EAAAA,IAAA,wBAA2BQ,IARnB,uBAQvBJ,EARuB,EAQvBA,KARuB,kBAUxBA,GAVwB,2CAAH,sDAajBU,EAAc,mCAAG,WAAM5B,GAAN,yFACLc,EAAAA,EAAAA,IAAA,iBACXd,EADW,oBACQe,EADR,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdW,EAAc,mCAAG,WAAM7B,GAAN,yFACLc,EAAAA,EAAAA,IAAA,iBACXd,EADW,4BACgBe,EADhB,oBADK,uBACpBG,EADoB,EACpBA,KADoB,kBAKrBA,EAAKY,MALgB,2CAAH,sDAQd1B,EAAiB,mCAAG,WAAMJ,GAAN,yFACRc,EAAAA,EAAAA,IAAA,iBACXd,EADW,4BACgBe,EADhB,oBADQ,uBACvBG,EADuB,EACvBA,KADuB,kBAKxBA,EAAKC,SALmB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/fetchAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { fetchMovieReviews } from '../../services/fetchAPI';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setError(false);\n\n    const fetchMovies = async () => {\n      try {\n        // setError(false);\n        const response = await fetchMovieReviews(movieId);\n        // if (response.length === 0) setError(true);\n\n        setReviews(response);\n      } catch (error) {\n        setError(true);\n        console.error(error.message);\n        toast.error(\n          'Oops! Something went wrong. Please, reload the page and try again.'\n        );\n      }\n    };\n\n    fetchMovies();\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && <h3>Oops...</h3>}\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h4>{`Author: ${author}`}</h4>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bb962418f002b21b8e856f495cf1a622';\n\nexport const fetchTrendingMovies = async (page = 1) => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n  // console.log('data.results:', data.results);\n  return data.results;\n};\n\nexport const fetchSearchMovies = async (value, page = 1) => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: page,\n    include_adult: false,\n    query: value,\n  });\n  const { data } = await axios.get(`/search/movie?${searchParams}`);\n  // console.log('data:', data);\n  return data;\n};\n\nexport const fetchMovieData = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log('data:', data);\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log('data.cast:', data.cast);\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log('data.results:', data.results);\n  return data.results;\n};\n"],"names":["useState","reviews","setReviews","error","setError","movieId","useParams","useEffect","fetchMovies","fetchMovieReviews","response","console","message","toast","length","map","id","author","content","axios","API_KEY","fetchTrendingMovies","page","data","results","fetchSearchMovies","value","searchParams","URLSearchParams","api_key","language","include_adult","query","fetchMovieData","fetchMovieCast","cast"],"sourceRoot":""}