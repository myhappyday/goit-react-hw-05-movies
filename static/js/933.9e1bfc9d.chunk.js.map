{"version":3,"file":"static/js/933.9e1bfc9d.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Search/Search.styled.jsx","components/Search/Search.jsx","pages/Movies.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 28px;\n  line-height: 1.16;\n  letter-spacing: 0.03em;\n  color: #3f51b5;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      {title && <Title>{title}</Title>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\n\n// export const Header = styled.header`\n//   top: 0;\n//   left: 0;\n//   position: sticky;\n//   z-index: 1100;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   min-height: 64px;\n//   padding-right: 24px;\n//   padding-left: 24px;\n//   padding-top: 12px;\n//   padding-bottom: 12px;\n//   color: #fff;\n//   background-color: #3f51b5;\n//   box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n//     0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n// `;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 16px;\n  padding-right: 4px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover {\n    opacity: 1;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport { Form, Input, Button } from './Search.styled';\n\nconst Search = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = event => {\n    setValue(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const searchValue = value.trim();\n\n    if (searchValue === '') {\n      toast.warn(\n        'The search field is empty. Please enter your data for query.'\n      );\n      return;\n    }\n\n    onSubmit(searchValue);\n    setValue('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"search\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={value}\n        onChange={handleChange}\n      />\n      <Button type=\"submit\">\n        Search\n        <ImSearch size={24} />\n      </Button>\n    </Form>\n  );\n};\n\nSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n// import { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\n\nimport { fetchSearchMovies } from '../services/fetchAPI';\nimport placeholder from '../images/no-image.png';\n\nimport Section from '../components/Section';\nimport Search from '../components/Search';\n\nconst API_IMG_URL = `https://image.tmdb.org/t/p/original`;\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n  // console.log('location: ', location);\n  const currentPage = location.pathname === '/' ? 'movies' : location.pathname;\n\n  useEffect(() => {\n    setError(false);\n    const searchValue = searchParams.get('query') ?? '';\n\n    if (!searchValue) {\n      setMovies([]);\n      return;\n    }\n\n    const fetchMovies = async () => {\n      try {\n        const response = await fetchSearchMovies(searchValue, page);\n        const { results, total_pages } = response;\n\n        // if (response.length === 0) setError(true);\n        if (results.length === 0) {\n          setError(true);\n          toast.warn(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n          return;\n        }\n\n        setMovies(prev => [...prev, ...results]);\n        setTotalPages(total_pages);\n      } catch (error) {\n        setError(true);\n        console.error(error.message);\n        toast.error(\n          'Oops! Something went wrong. Please, reload the page and try again.'\n        );\n      }\n    };\n\n    fetchMovies();\n  }, [page, searchParams]);\n\n  const handleFormSubmit = value => {\n    setMovies([]);\n    setPage(1);\n    setTotalPages(1);\n\n    if (value === searchParams.get('query')) {\n      return toast.warn(\n        'You have already searched for movies with this keyword. Please try something else.'\n      );\n      // return;\n    }\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <>\n      <Search onSubmit={handleFormSubmit} />\n      {movies.length > 0 && (\n        <Section title=\"At your request, the following films were found:\">\n          {/* {error && movies === null ? (\n        <p>Sorry, there are no results for this query.</p>\n      ) : (\n        <h3>Oops...</h3>\n      )} */}\n          {error && <p>Sorry, we couldn't find anything for your query.</p>}\n          {/* {error && <h3>Oops...</h3>} */}\n          {movies.length > 0 && (\n            <ul>\n              {movies.map(({ id, title, name, poster_path }) => {\n                return (\n                  <li key={id}>\n                    <Link\n                      to={`${currentPage}/${id}`}\n                      state={{ from: location }}\n                    >\n                      <img\n                        src={\n                          poster_path ? API_IMG_URL + poster_path : placeholder\n                        }\n                        alt={title ?? name}\n                        loading=\"lazy\"\n                        width=\"300\"\n                        // height=\"300\"\n                      />\n                      <p>{title ?? name}</p>\n                    </Link>\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n          {page < totalPages && (\n            <button\n              type=\"button\"\n              aria-label=\"Load more\"\n              onClick={() => setPage(prev => prev + 1)}\n            >\n              Load more\n            </button>\n          )}\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bb962418f002b21b8e856f495cf1a622';\n\nexport const fetchTrendingMovies = async (page = 1) => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n  return data.results;\n};\n\nexport const fetchSearchMovies = async (value, page = 1) => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: page,\n    include_adult: false,\n    query: value,\n  });\n  const { data } = await axios.get(`/search/movie?${searchParams}`);\n  return data;\n};\n\nexport const fetchMovieData = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n"],"names":["Title","styled","title","children","Form","Input","Button","onSubmit","useState","value","setValue","event","preventDefault","searchValue","trim","toast","type","name","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","size","movies","setMovies","page","setPage","totalPages","setTotalPages","error","setError","useSearchParams","searchParams","setSearchParams","location","useLocation","currentPage","pathname","useEffect","get","fetchMovies","fetchSearchMovies","response","results","total_pages","length","prev","console","message","query","Section","map","id","poster_path","to","state","from","src","alt","loading","width","onClick","axios","API_KEY","fetchTrendingMovies","data","URLSearchParams","api_key","language","include_adult","fetchMovieData","movieId","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}