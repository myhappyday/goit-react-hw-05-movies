{"version":3,"file":"static/js/130.d7fc4f51.chunk.js","mappings":"oMAEaA,EAAeC,EAAAA,EAAAA,IAAH,mEAKZC,EAAQD,EAAAA,EAAAA,IAAH,qFAMLE,EAAUF,EAAAA,EAAAA,EAAH,gJ,SCKpB,EAfuB,SAAC,GAAuC,IAArCG,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC9C,OACE,UAACP,EAAD,CAAcQ,KAAK,QAAnB,WACE,SAACN,EAAD,CAAOO,IAAKL,EAAUE,MAAOA,EAAOD,IAAKA,KACzC,SAACF,EAAD,UAAUI,MAGf,C,qHCPYG,EAAaT,EAAAA,EAAAA,GAAH,kVAaVU,GAAaV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAH,gQAeVY,EAAcZ,EAAAA,EAAAA,IAAH,6IAOXa,EAAQb,EAAAA,EAAAA,EAAH,yF,mBCGlB,EA3BuB,SAAC,GAA2C,IAAzCc,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAC7CC,GAAWC,EAAAA,EAAAA,MACXC,EAAoC,MAAtBF,EAASG,SAAmB,SAAWH,EAASG,SAEpE,OACE,SAACZ,EAAD,WACE,UAACC,EAAD,CAAYY,GAAE,UAAKF,EAAL,YAAoBN,GAAMS,MAAO,CAAEC,KAAMN,GAAvD,WACE,SAACN,EAAD,CACEJ,IAAKS,EAVE,sCAUqBA,EAASQ,EACrCrB,IAAG,OAAEW,QAAF,IAAEA,EAAAA,EAASC,EACdU,QAAQ,OACRrB,MAAM,MACNsB,OAAO,SAET,SAACd,EAAD,iBAAQE,QAAR,IAAQA,EAAAA,EAASC,QAIxB,EC9BYY,EAAa5B,EAAAA,EAAAA,GAAH,gKC2BvB,EAxBmB,SAAC,GAAgB,IAAd6B,EAAa,EAAbA,OACpB,OACE,SAACD,EAAD,UACGC,EAAOC,KAAI,gBAAGhB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,eAAgBe,EAA9B,EAA8BA,YAA9B,OACV,SAAC,EAAD,CAEEjB,GAAIA,EACJC,MAAOA,EACPC,eAAgBA,EAChBC,OAAQc,IAJHC,EAAAA,EAAAA,IAAO,GAFJ,KAWjB,C,sECjBYnB,E,QAAQb,EAAAA,GAAH,oL,SCclB,EAbgB,SAAC,GAAyB,IAAvBe,EAAsB,EAAtBA,MAAOkB,EAAe,EAAfA,SACxB,OACE,+BACGlB,IAAS,SAACF,EAAD,UAAQE,IACjBkB,IAGN,C,oMCRYC,EAAOlC,EAAAA,EAAAA,KAAH,kKASJmC,EAAQnC,EAAAA,EAAAA,MAAH,+WAmBLoC,EAASpC,EAAAA,EAAAA,OAAH,+f,SCoBnB,EA5Ce,SAAC,GAAkB,IAAhBqC,EAAe,EAAfA,SAChB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAqBA,OACE,UAACN,EAAD,CAAMG,SAhBa,SAAAI,GACnBA,EAAMC,iBACN,IAAMC,EAAcJ,EAAMK,OAEN,KAAhBD,GAOJN,EAASM,GACTH,EAAS,KAPPK,EAAAA,GAAAA,KACE,+DAOL,EAGC,WACE,SAACV,EAAD,CACEW,KAAK,OACLC,KAAK,SACLC,aAAa,MACbC,WAAS,EACTxB,YAAY,gBACZc,MAAOA,EACPW,SA5Be,SAAAT,GACnBD,EAASC,EAAMU,cAAcZ,MAAMa,cACpC,KA4BG,SAAChB,EAAD,CAAQU,KAAK,SAAb,UACE,SAAC,MAAD,CAAUO,KAAM,SAIvB,E,iFC1CYC,EAActD,EAAAA,EAAAA,OAAH,ieCcxB,EAZuB,SAAC,GAAiB,IAAfuD,EAAc,EAAdA,QACxB,OACE,SAACD,EAAD,CAAaR,KAAK,SAASS,QAASA,EAAS,aAAW,YAAxD,SAAoE,aAIvE,EC0FD,EAxFe,WACb,OAA4BjB,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAe2B,EAAf,KACA,GAAwBlB,EAAAA,EAAAA,UAAS,GAAjC,eAAOmB,EAAP,KAAaC,EAAb,KACA,GAAoCpB,EAAAA,EAAAA,UAAS,GAA7C,eAAOqB,EAAP,KAAmBC,EAAnB,KACA,GAA0BtB,EAAAA,EAAAA,UAAS,MAAnC,eAAOuB,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACdJ,GAAS,GACT,IAAMnB,EAAW,UAAGqB,EAAaG,IAAI,gBAApB,QAAgC,GAEjD,GAAKxB,EAAL,CAKA,IAAMyB,EAAW,mCAAG,kHAEOC,EAAAA,EAAAA,IAAkB1B,EAAac,GAFtC,UAEVa,EAFU,OAGRC,EAAyBD,EAAzBC,QAASC,EAAgBF,EAAhBE,YAEM,IAAnBD,EAAQE,OALI,uBAMdX,GAAS,GACTjB,EAAAA,GAAAA,KACE,4EARY,0BAahBW,GAAU,SAAAkB,GAAI,wBAAQA,IAAR,OAAiBH,GAAjB,IACdX,EAAcY,GAdE,kDAgBhBV,GAAS,GACTN,EAAU,MACVmB,QAAQd,MAAM,KAAMvD,SACpBuC,EAAAA,GAAAA,MACE,sEApBc,0DAAH,qDAyBjBuB,GA3BC,MAFCZ,EAAU,GA8Bb,GAAE,CAACC,EAAMO,IAeV,OACE,iCACE,SAAC,EAAD,CAAQ3B,SAfa,SAAAE,GAKvB,GAJAiB,EAAU,IACVE,EAAQ,GACRE,EAAc,GAEVrB,IAAUyB,EAAaG,IAAI,SAC7B,OAAOtB,EAAAA,GAAAA,KACL,sFAGJoB,EAAgB,CAAEW,MAAOrC,GAC1B,IAKIsB,GAAoB,OAAXhC,IACR,SAACgD,EAAA,EAAD,CACE1E,SAAU2E,EACV1E,IAAK,cACLC,MAAM,MACNC,QAAO,qDAGVuD,GAAoB,OAAXhC,IACN,SAACgD,EAAA,EAAD,CACE1E,SAAU2E,EACV1E,IAAK,cACLC,MAAM,MACNC,QAAS,wEAGbuD,GAAShC,GAAUA,EAAO4C,OAAS,IACnC,UAACM,EAAA,EAAD,CAAShE,MAAM,mDAAf,WACE,SAACiE,EAAA,EAAD,CAAYnD,OAAQA,IACnB4B,EAAOE,IACN,SAAC,EAAD,CAAgBJ,QAAS,kBAAMG,GAAQ,SAAAgB,GAAI,OAAIA,EAAO,CAAX,GAAlB,SAMpC,C,kMChGDO,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAmB,mCAAG,2GAAO1B,EAAP,+BAAc,EAAd,SACVwB,EAAAA,EAAAA,IAAA,sCACUC,EADV,iBAC0BzB,IAFhB,uBACzB2B,EADyB,EACzBA,KADyB,kBAI1BA,EAAKb,SAJqB,2CAAH,qDAOnBF,EAAiB,mCAAG,WAAO9B,GAAP,gGAAckB,EAAd,+BAAqB,EAC9CO,EAAe,IAAIqB,gBAAgB,CACvCC,QAASJ,EACTK,SAAU,QACV9B,KAAMA,EACN+B,eAAe,EACfZ,MAAOrC,IANsB,SAQR0C,EAAAA,EAAAA,IAAA,wBAA2BjB,IARnB,uBAQvBoB,EARuB,EAQvBA,KARuB,kBASxBA,GATwB,2CAAH,sDAYjBK,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAAAA,EAAAA,IAAA,iBACXS,EADW,oBACQR,EADR,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOdO,EAAc,mCAAG,WAAMD,GAAN,yFACLT,EAAAA,EAAAA,IAAA,iBACXS,EADW,4BACgBR,EADhB,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAIrBA,EAAKQ,MAJgB,2CAAH,sDAOdC,EAAiB,mCAAG,WAAMH,GAAN,yFACRT,EAAAA,EAAAA,IAAA,iBACXS,EADW,4BACgBR,EADhB,oBADQ,uBACvBE,EADuB,EACvBA,KADuB,kBAIxBA,EAAKb,SAJmB,2CAAH,qD","sources":["components/ImageErrorView/ImageErrorView.styled.jsx","components/ImageErrorView/ImageErrorView.jsx","components/MoviesListItem/MoviesListItem.styled.jsx","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Search/Search.styled.jsx","components/Search/Search.jsx","components/ButtonLoadMore/ButtonLoadMore.styled.jsx","components/ButtonLoadMore/ButtonLoadMore.jsx","pages/Movies.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorWrapper = styled.div`\n  max-width: 600px;\n  margin: 24px auto;\n`;\n\nexport const Image = styled.img`\n  max-width: 100%;\n  object-fit: cover;\n  margin: 0 auto;\n`;\n\nexport const Message = styled.p`\n  margin: 0 auto;\n  padding: 24px;\n  text-align: center;\n  color: #3f51b5;\n  font-size: 26px;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport { ErrorWrapper, Image, Message } from './ImageErrorView.styled';\n\nconst ImageErrorView = ({ imageURL, alt, width, message }) => {\n  return (\n    <ErrorWrapper role=\"alert\">\n      <Image src={imageURL} width={width} alt={alt} />\n      <Message>{message}</Message>\n    </ErrorWrapper>\n  );\n};\n\nImageErrorView.propTypes = {\n  imageURL: PropTypes.string,\n  alt: PropTypes.string,\n  massage: PropTypes.string,\n};\n\nexport default ImageErrorView;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const ItemStyled = styled.li`\n  border-radius: 6px;\n  overflow: hidden;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    box-shadow: rgb(158, 158, 158) 0px 4px 10px 4px;\n  }\n`;\n\nexport const LinkStyled = styled(Link)`\n  color: #3f51b5;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.2;\n  text-decoration: none;\n  color: #212121;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #3f51b5;\n  }\n`;\n\nexport const ImageStyled = styled.img`\n  width: 100%;\n  height: 440px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const Title = styled.p`\n  margin: 0 auto;\n  padding: 30px 15px;\n  text-align: center;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  ItemStyled,\n  LinkStyled,\n  ImageStyled,\n  Title,\n} from './MoviesListItem.styled';\n\nimport placeholder from '../../images/no-poster.png';\n\nconst API_IMG_URL = `https://image.tmdb.org/t/p/original`;\n\nconst MoviesListItem = ({ id, title, original_title, poster }) => {\n  const location = useLocation();\n  const currentPage = location.pathname === '/' ? 'movies' : location.pathname;\n\n  return (\n    <ItemStyled>\n      <LinkStyled to={`${currentPage}/${id}`} state={{ from: location }}>\n        <ImageStyled\n          src={poster ? API_IMG_URL + poster : placeholder}\n          alt={title ?? original_title}\n          loading=\"lazy\"\n          width=\"280\"\n          height=\"420\"\n        />\n        <Title>{title ?? original_title}</Title>\n      </LinkStyled>\n    </ItemStyled>\n  );\n};\n\nMoviesListItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  original_title: PropTypes.string,\n  poster: PropTypes.string,\n};\n\nexport default MoviesListItem;\n","import styled from '@emotion/styled';\n\nexport const ListStyled = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 20px);\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  grid-gap: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport MoviesListItem from '../MoviesListItem';\nimport { ListStyled } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ListStyled>\n      {movies.map(({ id, title, original_title, poster_path }) => (\n        <MoviesListItem\n          key={nanoid(5)}\n          id={id}\n          title={title}\n          original_title={original_title}\n          poster={poster_path}\n        />\n      ))}\n    </ListStyled>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 24px;\n  line-height: 1.16;\n  letter-spacing: 0.03em;\n  color: #3f51b5;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      {title && <Title>{title}</Title>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  margin: 20px 0;\n  padding: 20px;\n  justify-content: space-between;\n  background-color: #fff;\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border-left: 1px solid #3f51b5;\n  border-top: 1px solid #3f51b5;\n  border-bottom: 1px solid #3f51b5;\n  border-right: 0;\n  border-radius: 4px 0 0 4px;\n  outline: none;\n  padding: 0 16px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  padding: 8px 16px;\n  justify-content: space-between;\n  border: 1px solid #3f51b5;\n  border-radius: 0 4px 4px 0;\n  font-size: 16px;\n  font-weight: 500;\n  background-color: rgb(243, 243, 243);\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;  \n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  :hover,\n  :focus {\n    background-color: #3f51b5;\n    color: white;   \n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport { Form, Input, Button } from './Search.styled';\n\nconst Search = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = event => {\n    setValue(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const searchValue = value.trim();\n\n    if (searchValue === '') {\n      toast.warn(\n        'The search field is empty. Please enter your data for query.'\n      );\n      return;\n    }\n\n    onSubmit(searchValue);\n    setValue('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input\n        type=\"text\"\n        name=\"search\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={value}\n        onChange={handleChange}\n      />\n      <Button type=\"submit\">        \n        <ImSearch size={24} />\n      </Button>\n    </Form>\n  );\n};\n\nSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","import styled from '@emotion/styled';\n\nexport const LoadMoreBtn = styled.button`\n  display: flex;\n  padding: 8px 16px;\n  margin: 20px auto 0 auto;\n  text-align: center;\n  border-radius: 4px;\n  background-color: rgb(243, 243, 243);\n  color: #212121;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border: 1px solid #3f51b5;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 16px;  \n  font-weight: 500;\n  \n  :hover,\n  :focus {\n    background-color: #3f51b5;\n    color: white;\n  }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LoadMoreBtn } from './ButtonLoadMore.styled';\n\nconst ButtonLoadMore = ({ onClick }) => {\n  return (\n    <LoadMoreBtn type=\"button\" onClick={onClick} aria-label=\"Load more\">\n      Load more\n    </LoadMoreBtn>\n  );\n};\n\nButtonLoadMore.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ButtonLoadMore;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { fetchSearchMovies } from '../services/fetchAPI';\nimport Search from '../components/Search';\nimport Section from '../components/Section';\nimport MoviesList from '../components/MoviesList';\nimport ImageErrorView from '../components/ImageErrorView';\nimport imageError from '../images/error.jpg';\nimport ButtonLoadMore from '../components/ButtonLoadMore';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    setError(false);\n    const searchValue = searchParams.get('query') ?? '';\n\n    if (!searchValue) {\n      setMovies([]);\n      return;\n    }\n\n    const fetchMovies = async () => {\n      try {\n        const response = await fetchSearchMovies(searchValue, page);\n        const { results, total_pages } = response;\n       \n        if (results.length === 0) {\n          setError(true);\n          toast.warn(\n            'Sorry, there are no movies matching your search query. Please try again.'\n          );\n          return;\n        }\n\n        setMovies(prev => [...prev, ...results]);\n        setTotalPages(total_pages);\n      } catch (error) {\n        setError(true);\n        setMovies(null)\n        console.error(error.message);\n        toast.error(\n          'Oops! Something went wrong. Please, reload the page and try again.'\n        );\n      }\n    };\n\n    fetchMovies();\n  }, [page, searchParams]);\n\n  const handleFormSubmit = value => {\n    setMovies([]);\n    setPage(1);\n    setTotalPages(1);\n\n    if (value === searchParams.get('query')) {\n      return toast.warn(\n        'You have already searched for movies with this keyword. Please try something else.'\n      );\n    }\n    setSearchParams({ query: value });\n  };\n\n  return (\n    <>\n      <Search onSubmit={handleFormSubmit} />\n      {error && movies !== null && (\n        <ImageErrorView\n          imageURL={imageError}\n          alt={'Crying meme'}\n          width=\"300\"\n          message={`Sorry, we couldn't find anything for your query.`}\n        />\n      )}\n      {error && movies === null && (\n          <ImageErrorView\n            imageURL={imageError}\n            alt={'Crying meme'}\n            width=\"300\"\n            message={'Oops! Something went wrong. Please, reload the page and try again.'}\n          />\n      )}\n      {!error && movies && movies.length > 0 && (\n        <Section title=\"At your request, the following films were found:\">\n          <MoviesList movies={movies} />\n          {page < totalPages && (\n            <ButtonLoadMore onClick={() => setPage(prev => prev + 1)}/>\n          )}\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bb962418f002b21b8e856f495cf1a622';\n\nexport const fetchTrendingMovies = async (page = 1) => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n  return data.results;\n};\n\nexport const fetchSearchMovies = async (value, page = 1) => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: page,\n    include_adult: false,\n    query: value,\n  });\n  const { data } = await axios.get(`/search/movie?${searchParams}`);\n  return data;\n};\n\nexport const fetchMovieData = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n"],"names":["ErrorWrapper","styled","Image","Message","imageURL","alt","width","message","role","src","ItemStyled","LinkStyled","Link","ImageStyled","Title","id","title","original_title","poster","location","useLocation","currentPage","pathname","to","state","from","placeholder","loading","height","ListStyled","movies","map","poster_path","nanoid","children","Form","Input","Button","onSubmit","useState","value","setValue","event","preventDefault","searchValue","trim","toast","type","name","autoComplete","autoFocus","onChange","currentTarget","toLowerCase","size","LoadMoreBtn","onClick","setMovies","page","setPage","totalPages","setTotalPages","error","setError","useSearchParams","searchParams","setSearchParams","useEffect","get","fetchMovies","fetchSearchMovies","response","results","total_pages","length","prev","console","query","ImageErrorView","imageError","Section","MoviesList","axios","API_KEY","fetchTrendingMovies","data","URLSearchParams","api_key","language","include_adult","fetchMovieData","movieId","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}