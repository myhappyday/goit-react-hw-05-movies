{"version":3,"file":"static/js/415.1a24e926.chunk.js","mappings":"mPAwEA,UA/Da,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAGA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACRD,GAAS,GAET,IAAME,EAAW,mCAAG,8GAEOC,EAAAA,EAAAA,MAFP,OAIQ,KAFlBC,EAFU,QAIHC,QAAcL,GAAS,GAEpCF,EAAUM,GANM,gDAQhBJ,GAAS,GACTM,QAAQP,MAAM,KAAMQ,SACpBC,EAAAA,GAAAA,MACE,sEAXc,yDAAH,qDAgBjBN,GACD,GAAE,KAGD,2BACGH,IAAS,wBAAI,aACZA,GAASF,GAAUA,EAAOQ,OAAS,IACnC,iCACE,wBAAI,oBACJ,wBACGR,EAAOY,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC9B,OACE,yBACE,UAAC,KAAD,CACEC,GAAE,iBAAYJ,GADhB,WAIE,gBACEK,IACEF,EA9CP,sCA8CmCA,EAAcG,EAE5CC,IAAG,OAAEN,QAAF,IAAEA,EAAAA,EAASC,EACdM,QAAQ,OACRC,MAAM,SAGR,8BAAIR,QAAJ,IAAIA,EAAAA,EAASC,QAdRF,EAkBZ,WAMZ,C,kMCpEDU,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHlB,EAAmB,mCAAG,2GAAOmB,EAAP,+BAAc,EAAd,SACVF,EAAAA,EAAAA,IAAA,sCACUC,EADV,iBAC0BC,IAFhB,uBACzBC,EADyB,EACzBA,KADyB,kBAK1BA,EAAKC,SALqB,2CAAH,qDAQnBC,EAAiB,mCAAG,WAAOC,GAAP,gGAAcJ,EAAd,+BAAqB,EAC9CK,EAAe,IAAIC,gBAAgB,CACvCC,QAASR,EACTS,SAAU,QACVR,KAAMA,EACNS,eAAe,EACfC,MAAON,IANsB,SAQRN,EAAAA,EAAAA,IAAA,wBAA2BO,IARnB,uBAQvBJ,EARuB,EAQvBA,KARuB,kBAUxBA,GAVwB,2CAAH,sDAajBU,EAAc,mCAAG,WAAMC,GAAN,yFACLd,EAAAA,EAAAA,IAAA,iBACXc,EADW,oBACQb,EADR,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdY,EAAc,mCAAG,WAAMD,GAAN,yFACLd,EAAAA,EAAAA,IAAA,iBACXc,EADW,4BACgBb,EADhB,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAKrBA,EAAKa,MALgB,2CAAH,sDAQdC,EAAiB,mCAAG,WAAMH,GAAN,yFACRd,EAAAA,EAAAA,IAAA,iBACXc,EADW,4BACgBb,EADhB,oBADQ,uBACvBE,EADuB,EACvBA,KADuB,kBAKxBA,EAAKC,SALmB,2CAAH,qD","sources":["pages/Home.jsx","services/fetchAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { fetchTrendingMovies } from '../services/fetchAPI';\nimport placeholder from '../images/no-image.png';\n\nconst API_IMG_URL = `https://image.tmdb.org/t/p/original`;\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  // const [page, setPage] = useState();\n  // const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setError(false);\n\n    const fetchMovies = async () => {\n      try {\n        const response = await fetchTrendingMovies();\n\n        if (response.length === 0) setError(true);\n\n        setMovies(response);\n      } catch (error) {\n        setError(true);\n        console.error(error.message);\n        toast.error(\n          'Oops! Something went wrong. Please, reload the page and try again.'\n        );\n      }\n    };\n\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      {error && <h3>Oops...</h3>}\n      {!error && movies && movies.length > 0 && (\n        <>\n          <h2>Trending today</h2>\n          <ul>\n            {movies.map(({ id, title, name, poster_path }) => {\n              return (\n                <li key={id}>\n                  <Link\n                    to={`movies/${id}`}\n                    //  state={{ from: location }}\n                  >\n                    <img\n                      src={\n                        poster_path ? API_IMG_URL + poster_path : placeholder\n                      }\n                      alt={title ?? name}\n                      loading=\"lazy\"\n                      width=\"300\"\n                      // height=\"300\"\n                    />\n                    <p>{title ?? name}</p>\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bb962418f002b21b8e856f495cf1a622';\n\nexport const fetchTrendingMovies = async (page = 1) => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n  // console.log('data.results:', data.results);\n  return data.results;\n};\n\nexport const fetchSearchMovies = async (value, page = 1) => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: page,\n    include_adult: false,\n    query: value,\n  });\n  const { data } = await axios.get(`/search/movie?${searchParams}`);\n  // console.log('data:', data);\n  return data;\n};\n\nexport const fetchMovieData = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log('data:', data);\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log('data.cast:', data.cast);\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  // console.log('data.results:', data.results);\n  return data.results;\n};\n"],"names":["useState","movies","setMovies","error","setError","useEffect","fetchMovies","fetchTrendingMovies","response","length","console","message","toast","map","id","title","name","poster_path","to","src","placeholder","alt","loading","width","axios","API_KEY","page","data","results","fetchSearchMovies","value","searchParams","URLSearchParams","api_key","language","include_adult","query","fetchMovieData","movieId","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}