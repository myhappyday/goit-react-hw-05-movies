{"version":3,"file":"static/js/857.30c70855.chunk.js","mappings":"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","sources":["components/ImageErrorView/ImageErrorView.styled.jsx","components/ImageErrorView/ImageErrorView.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieData/MovieData.styled.jsx","components/MovieData/MovieData.jsx","pages/MovieDetails.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ErrorWrapper = styled.div`\n  max-width: 600px;\n  margin: 24px auto;\n`;\n\nexport const Image = styled.img`\n  max-width: 100%;\n  object-fit: cover;\n  margin: 0 auto;\n`;\n\nexport const Message = styled.p`\n  margin: 0 auto;\n  padding: 24px;\n  text-align: center;\n  color: #3f51b5;\n  font-size: 26px;\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport { ErrorWrapper, Image, Message } from './ImageErrorView.styled';\n\nconst ImageErrorView = ({ imageURL, alt, width, message }) => {\n  return (\n    <ErrorWrapper role=\"alert\">\n      <Image src={imageURL} width={width} alt={alt} />\n      <Message>{message}</Message>\n    </ErrorWrapper>\n  );\n};\n\nImageErrorView.propTypes = {\n  imageURL: PropTypes.string,\n  alt: PropTypes.string,\n  massage: PropTypes.string,\n};\n\nexport default ImageErrorView;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const BtnLink = styled(Link)`\n  display: flex;\n  width: 90px;\n  gap: 8px;\n  padding: 8px 16px;\n  margin: 20px 0;\n  font-weight: 500;\n  text-decoration: none;\n  border: 1px solid #3f51b5;\n  border-radius: 4px;\n  color: #212121;\n  background-color: rgb(243, 243, 243);\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: white;\n    background-color: #3f51b5;\n  }\n`;\n","import { BiArrowBack } from 'react-icons/bi';\nimport { BtnLink } from './BackLink.styled';\nimport PropTypes from 'prop-types';\n\nconst BackLink = ({ path }) => {\n  return (\n    <BtnLink to={path}>\n      <BiArrowBack />\n      Go back\n    </BtnLink>\n  );\n};\n\nBackLink.propTypes = {\n  path: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n};\n\nexport default BackLink;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const ImageStyled = styled.img`\n  max-width: 360px;\n  height: auto;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  text-align: left;\n  padding: 15px 20px;\n  border-bottom: 2px solid #3f51b5;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n  padding: 15px 0;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 15px;\n  font-size: 28px;\n  line-height: 1.16;\n  letter-spacing: 0.03em;\n  color: #3f51b5;\n`;\n\nexport const SubTitle = styled.h3`\n  margin-bottom: 15px;\n  font-size: 20px;\n  line-height: 1.16;\n  letter-spacing: 0.03em;\n  color: #3f51b5;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 15px;\n  font-size: 18px;\n  line-height: 1.16;\n  color: #212121;\n`;\n\nexport const AdditionalInfo = styled.div`\n  border-bottom: 2px solid #3f51b5;\n  padding: 15px 0;\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  list-style: none;\n  padding: 0;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  display: inline-block;\n  width: 60px;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  text-align: center;\n  background-color: rgb(243, 243, 243);\n  color: #212121;\n  font-weight: 500;\n  border: 1px solid #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active {\n    color: white;\n    background-color: #3f51b5;\n  }\n\n  :hover,\n  :focus {\n    color: white;\n    background-color: #3f51b5;\n  }\n`;\n","import { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Loader from '../../components/Loader';\nimport placeholder from '../../images/no-poster.png';\nimport {\n  ImageStyled,\n  Wrapper,\n  TextWrapper,\n  Title,\n  SubTitle,\n  Text,\n  AdditionalInfo,\n  NavList,\n  NavLinkStyled,\n} from './MovieData.styled';\n\nconst API_IMG_URL = `https://image.tmdb.org/t/p/original`;\n\nconst MovieData = ({ movieData }) => {\n  const {\n    poster_path,\n    title,\n    original_title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n  } = movieData;\n\n  const getGenresMovies = genres => {\n    if (genres) {\n      return genres.map(genre => genre.name).join(', ');\n    }\n  };\n  return (\n    <div>\n      <Wrapper>\n        <ImageStyled\n          src={poster_path ? API_IMG_URL + poster_path : placeholder}\n          alt={title ?? original_title}\n          width=\"300\"\n          height=\"auto\"\n        />\n        <TextWrapper>\n          <Title>\n            {title ?? original_title}\n            {release_date && <span> ({parseInt(release_date)})</span>}\n          </Title>\n          <Text>User score: {Math.round(vote_average * 10)}%</Text>\n          <SubTitle>Overview</SubTitle>\n          <Text>{overview}</Text>\n          <SubTitle>Genres</SubTitle>\n          <Text>{getGenresMovies(genres)}</Text>\n        </TextWrapper>\n      </Wrapper>\n      <AdditionalInfo>\n        <SubTitle>Additional information</SubTitle>\n        <NavList>\n          <li>\n            <NavLinkStyled to=\"cast\">Cast</NavLinkStyled>\n          </li>\n          <li>\n            <NavLinkStyled to=\"reviews\">Reviews</NavLinkStyled>\n          </li>\n        </NavList>\n      </AdditionalInfo>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nMovieData.propTypes = {\n  movieData: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    original_title: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    release_date: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n\nexport default MovieData;\n","import { useState, useEffect, useRef } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { fetchMovieData } from '../services/fetchAPI';\nimport BackLink from '../components/BackLink';\nimport MovieData from '../components/MovieData';\nimport ImageErrorView from '../components/ImageErrorView';\nimport imageError from '../images/error-oops.jpg';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState();\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setError(false);\n\n    const fetchMovies = async () => {\n      try {\n        const response = await fetchMovieData(movieId);\n        if (response.length === 0) setError(true);\n\n        setMovieData(response);       \n      } catch (error) {\n        setError(true);\n        console.error(error.message);\n        toast.error(\n          'Oops! Something went wrong. Please, reload the page and try again.'\n        );\n      }\n    };\n\n    fetchMovies();\n  }, [movieId]);\n\n  return (\n    <div>\n      <BackLink path={backLinkLocationRef.current} />     \n      {!error && movieData && <MovieData movieData={movieData} />}\n      {error && (\n        <ImageErrorView\n          imageURL={imageError}\n          alt={'Something went wrong'}\n          width=\"600\"\n          message={\n            'Please, reload the page and try again.'\n          }\n        />\n      )}      \n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'bb962418f002b21b8e856f495cf1a622';\n\nexport const fetchTrendingMovies = async (page = 1) => {\n  const { data } = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n  return data.results;\n};\n\nexport const fetchSearchMovies = async (value, page = 1) => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    language: 'en-US',\n    page: page,\n    include_adult: false,\n    query: value,\n  });\n  const { data } = await axios.get(`/search/movie?${searchParams}`);\n  return data;\n};\n\nexport const fetchMovieData = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return data.results;\n};\n"],"names":["ErrorWrapper","styled","Image","Message","imageURL","alt","width","message","role","src","BtnLink","Link","path","to","ImageStyled","Wrapper","TextWrapper","Title","SubTitle","Text","AdditionalInfo","NavList","NavLinkStyled","NavLink","movieData","poster_path","title","original_title","vote_average","overview","genres","release_date","placeholder","height","parseInt","Math","round","map","genre","name","join","getGenresMovies","Suspense","fallback","Loader","useState","setMovieData","error","setError","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovies","fetchMovieData","response","length","console","toast","current","ImageErrorView","imageError","axios","API_KEY","fetchTrendingMovies","page","data","results","fetchSearchMovies","value","searchParams","URLSearchParams","api_key","language","include_adult","query","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}